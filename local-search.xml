<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>博客搭建</title>
    <link href="undefined2019/12/16/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>2019/12/16/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<hr><p>title: 博客搭建<br>date: 2019-12-16 17:52:30<br>tags:<br><strong>—基于 Hexo 框架搭建个人博客 blog</strong><br>  作为一个博客新人，搭建这个博客花了不少力气，毕竟是第一次，所以我想到可能会有人跟我一样，在搭建博客时会遇到一些问题，所以写一篇简单的教程教大家如何搭建一个个人博客！ 注：此博客只为新人搭建博客做参考，大神可略过！<br><strong>前言</strong><br>使用软件：git ，Node ++,  hexo框架，node.js, npm<br>一，前言<br>体验更加排版请访问原文链接：<a href="https://lzk0717.github.io/" target="_blank" rel="noopener">https://lzk0717.github.io/</a></p><p>使用 github pages 服务搭建博客的好处有：<br>1，全是静态文件，访问速度快；<br>2，免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于 github 的；<br>3，数据绝对安全，基于 github 的版本管理，想恢复到哪个历史版本都行；博客内容可以轻松打包、转移、发布到其它平台；<br><strong>准备工作</strong><br>在开始一切之前，你必须已经：<br>1，github 账号，没有的话去注册一个；<br>2，安装了 node.js、npm，并了解相关基础知识；<br>3，安装了 git for windows（或者其它 git 客户端）<br><strong>本文所使用的环境：</strong><br>Windows<br><a href="http://nodejs.cn/" target="_blank" rel="noopener">node.js</a><br><a href="https://git-scm.com" target="_blank" rel="noopener">git</a><br>hexo!<br>搭建 github 博客<br>环境搭建：<br>1、安装 Node.js 和配置好 Node.js 环境。下载链接如下：Node.js 下载 找到 DOWNLOADS, 我的是 win10 系统，所以下载 Windows 版本<br><img src="https://img-blog.csdnimg.cn/20191218163414862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>下载完之后一路无脑安装就好，环境变量会自动配置，安装完成后，打开 cmd 命令行，成功界面如下。<br><img src="https://img-blog.csdnimg.cn/20191218163424366.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>注意：如果提示不是内部或外部命令，把 cmd 关了重新打开就好了。<br>2、安装 Git 和配置好 Git 环境，<br>官网：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a><br><img src="https://img-blog.csdnimg.cn/20191218163508242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>安装成功的象征就是在电脑上任何位置鼠标右键能够出现如下两个选择。</p><p><img src="https://img-blog.csdnimg.cn/20191218163515175.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>3、Github 账户注册，百度吧！！！<br>4、安装 Hexo，在自己认为合适的地方创个文件夹，我是在 D 盘建了一个 My blog 文件夹。<br><img src="https://img-blog.csdnimg.cn/20191218163552181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>然后进入到该文件夹里面,鼠标右击，点击git bash here, </p><pre><code class="bash">输入 npm install hexo -g，开始安装 Hexo输入 hexo -v，检查 hexo 是否安装成功</code></pre><p><img src="https://img-blog.csdnimg.cn/20191218163604992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>输入 hexo init，初始化该文件夹<br>看到后面的 “Start blogging with Hexo！”,就算是安装成功</p><pre><code class="bash">输入 npm install，安装所需要的组件然后输入 hexo g，首次体验 Hexo输入 hexo s，开启服务器，访问该网址，正式体验 Hexo</code></pre><p>在浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 出现如下图就成功了<br><img src="https://img-blog.csdnimg.cn/20191218163614783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>二，创建仓库<br>新建一个名为你的用户名.github.io 的仓库，比如说，如果你的 github 用户名是 test，那么你就新建test.github.io 的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a> 了，是不是很方便？<br>由此可见，每一个 github 账户最多只能创建一个这样可以直接使用域名访问的仓库。<br>几个注意的地方：<br>1，注册的邮箱一定要验证，否则不会成功；<br>2，仓库名字必须是：username.github.io，其中 username 是你的用户名；<br>3，仓库创建成功不会立即生效，需要过一段时间，大概 10-30 分钟，或者更久，我的等了半个小时才生效；<br>4，创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。<br>5，新建项目，项目必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选 Initialize this repository with a README。<br><img src="https://img-blog.csdnimg.cn/20191218163635630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191218163641479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>执行以下命令全局配置一下本地账户：</p><pre><code class="bash">git config --global user.name &quot;用户名&quot;git config --global user.email &quot;邮箱地址&quot;</code></pre><p>然后开始生成密钥 SSH key</p><pre><code class="bash">ssh-keygen -t rsa -C &#39;上面的邮箱&#39;</code></pre><p>按照提示完成三次回车，即可生成 ssh key。</p><pre><code class="bash">通过查看～/.ssh/id_rsa.pub 文件内容，获取到你的 SSH key</code></pre><p><img src="https://img-blog.csdnimg.cn/20191218164027965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>盗用一张图，阴险.Jpg<br>首次使用还需要确认并添加主机到本机 SSH 可信列表。若返回 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 内容，则证明添加成功。</p><pre><code class="bash">ssh -T git@github.com</code></pre><p>到这还没完，还要登录 Github 上添加刚刚生成的 SSH key，按以下步骤添加：<img src="https://img-blog.csdnimg.cn/20191218164114294.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>创建一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认创建，搞定！！这样在你的 SSH keys 列表里就会看到你刚刚添加的密钥。</p><p><img src="https://img-blog.csdnimg.cn/20191218164135586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20191218164144208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>三，部署到 Github</strong><br>此时，本地和 Github 的工作做得差不了，是时候把它们两个连接起来了。你也可以查看官网的部署教程。<br>先不着急，部署之前还需要修改配置和安装部署插件。<br>第一：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：</p><p><img src="https://img-blog.csdnimg.cn/20191218164231714.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>第二：要安装一个部署插件 hexo-deployer-git。</p><pre><code class="bash">npm install hexo-deployer-git --save</code></pre><p>最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：</p><pre><code class="bash">hexo g –d</code></pre><p><img src="https://img-blog.csdnimg.cn/2019121816425742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>四，写博客</strong><br>  博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看 hexo 官网。<br>1，新建文章，<br>输入以下命令即可</p><pre><code class="bash">hexo new &#39;文章标题&#39;</code></pre><p>执行完成后可以在 /source/_posts 下看到一个 “文章标题.md” 的文章文件啦。.md 就是 Markdown 格式的文件，具体用法可以在网上找一下，语法还是比较简单的。<br>在 Markdown 文章里面输入你的文章内容<br><img src="https://img-blog.csdnimg.cn/2019121816435087.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>2，再执行一下以下命令</strong></p><pre><code class="bash">hexo ghexo s</code></pre><p>就可以看到你的文章在博客显示了，以下就是刚刚创建的.md文件<br><img src="https://img-blog.csdnimg.cn/20191218164446526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjQ0NzM0,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>3，最后，只要部署到你的 Github 上就可以了！</p><pre><code class="bash">hexo cleanhexo g -d</code></pre><p>   部署前最好能先执行一下 hexo clean 命令，清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>  在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。<br>另外，如果你的文章暂时不发布可以先保存在草稿里面。生成草稿的方法和文章差不多 hexo new draft “文章标题”，生成后会在 /source/_drafts 里看到你的草稿文章。当你想发布时只要执行 publish 命令即可发布到博客。</p><pre><code class="bash">hexo publish [layout] &lt;filename&gt;</code></pre><p>五，结语<br> 主题优化以及其他易出现的问题，请关注后期博客</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>